import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { FaLeaf, FaStar, FaArrowLeft, FaFilter } from 'react-icons/fa';
import { BiMoney, BiTime } from 'react-icons/bi';
import './LoanList.css';

const LoanList = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const userRole = location.state?.userRole || 'lender';
  const [filter, setFilter] = useState('all'); // all, high-rating, low-rate, esg

  // Mock data - s·∫Ω thay b·∫±ng API call
  const loans = [
    {
      id: 1,
      projectName: 'D·ª± √°n nƒÉng l∆∞·ª£ng m·∫∑t tr·ªùi Ninh Thu·∫≠n',
      amount: 200000000,
      purpose: 'ƒê·∫ßu t∆∞ h·ªá th·ªëng pin m·∫∑t tr·ªùi cho nh√† m√°y s·∫£n xu·∫•t',
      creditRating: 'A+',
      interestRate: 8.5,
      esgScore: 95,
      term: 24,
      funded: 65,
      representative: 'Nguy·ªÖn VƒÉn An',
      company: 'C√¥ng ty TNHH Green Energy'
    },
    {
      id: 2,
      projectName: 'D·ª± √°n n√¥ng nghi·ªáp h·ªØu c∆° ƒê√† L·∫°t',
      amount: 150000000,
      purpose: 'M·ªü r·ªông v√πng tr·ªìng rau h·ªØu c∆° v√† x√¢y d·ª±ng nh√† k√≠nh',
      creditRating: 'A',
      interestRate: 7.2,
      esgScore: 92,
      term: 18,
      funded: 80,
      representative: 'Tr·∫ßn Th·ªã B√¨nh',
      company: 'HTX N√¥ng nghi·ªáp s·∫°ch ƒê√† L·∫°t'
    },
    {
      id: 3,
      projectName: 'D·ª± √°n t√°i ch·∫ø nh·ª±a th√¢n thi·ªán m√¥i tr∆∞·ªùng',
      amount: 300000000,
      purpose: 'ƒê·∫ßu t∆∞ m√°y m√≥c t√°i ch·∫ø nh·ª±a th√†nh s·∫£n ph·∫©m t√°i s·ª≠ d·ª•ng',
      creditRating: 'B+',
      interestRate: 9.5,
      esgScore: 88,
      term: 30,
      funded: 40,
      representative: 'L√™ Minh C∆∞·ªùng',
      company: 'C√¥ng ty CP M√¥i tr∆∞·ªùng xanh'
    },
    {
      id: 4,
      projectName: 'D·ª± √°n du l·ªãch sinh th√°i Ph√∫ Qu·ªëc',
      amount: 500000000,
      purpose: 'X√¢y d·ª±ng khu ngh·ªâ d∆∞·ª°ng sinh th√°i th√¢n thi·ªán m√¥i tr∆∞·ªùng',
      creditRating: 'A',
      interestRate: 8.0,
      esgScore: 90,
      term: 36,
      funded: 25,
      representative: 'Ph·∫°m Th·ªã Dung',
      company: 'C√¥ng ty TNHH Du l·ªãch Xanh'
    },
    {
      id: 5,
      projectName: 'D·ª± √°n x·ª≠ l√Ω n∆∞·ªõc th·∫£i c√¥ng nghi·ªáp',
      amount: 180000000,
      purpose: 'L·∫Øp ƒë·∫∑t h·ªá th·ªëng x·ª≠ l√Ω n∆∞·ªõc th·∫£i hi·ªán ƒë·∫°i',
      creditRating: 'B',
      interestRate: 10.0,
      esgScore: 85,
      term: 24,
      funded: 55,
      representative: 'Ho√†ng VƒÉn Em',
      company: 'C√¥ng ty CP C√¥ng ngh·ªá m√¥i tr∆∞·ªùng'
    }
  ];

  const filteredLoans = loans.filter(loan => {
    if (filter === 'high-rating') return ['A+', 'A'].includes(loan.creditRating);
    if (filter === 'low-rate') return loan.interestRate <= 8.5;
    if (filter === 'esg') return loan.esgScore >= 90;
    return true;
  });

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
  };

  const getRatingColor = (rating) => {
    if (rating.includes('A')) return 'rating-a';
    if (rating.includes('B')) return 'rating-b';
    return 'rating-c';
  };

  const getESGColor = (score) => {
    if (score >= 90) return 'esg-high';
    if (score >= 80) return 'esg-medium';
    return 'esg-low';
  };

  return (
    <div className="loan-list-container">
      <div className="loan-list-header">
        <button className="btn-back" onClick={() => navigate('/dashboard', { state: { userRole } })}>
          <FaArrowLeft /> Quay l·∫°i
        </button>
        <h1>Danh s√°ch kho·∫£n vay</h1>
      </div>

      {/* Featured Promotional Banner - Add your image here */}
      <div className="loan-promo-banner">
        <div className="loan-banner-placeholder">
          <p>üí° Th√™m ·∫£nh qu·∫£ng c√°o d·ª± √°n n·ªïi b·∫≠t ·ªü ƒë√¢y</p>
          <span className="loan-banner-hint">K√≠ch th∆∞·ªõc ƒë·ªÅ xu·∫•t: 1200x400px</span>
        </div>
      </div>

      <div className="filter-section">
        <div className="filter-title">
          <FaFilter /> L·ªçc d·ª± √°n
        </div>
        <div className="filter-buttons">
          <button 
            className={filter === 'all' ? 'filter-btn active' : 'filter-btn'}
            onClick={() => setFilter('all')}
          >
            T·∫•t c·∫£ ({loans.length})
          </button>
          <button 
            className={filter === 'high-rating' ? 'filter-btn active' : 'filter-btn'}
            onClick={() => setFilter('high-rating')}
          >
            X·∫øp h·∫°ng cao
          </button>
          <button 
            className={filter === 'low-rate' ? 'filter-btn active' : 'filter-btn'}
            onClick={() => setFilter('low-rate')}
          >
            L√£i su·∫•t th·∫•p
          </button>
          <button 
            className={filter === 'esg' ? 'filter-btn active' : 'filter-btn'}
            onClick={() => setFilter('esg')}
          >
            <FaLeaf /> ESG cao
          </button>
        </div>
      </div>

      <div className="loans-grid">
        {filteredLoans.map(loan => (
          <div key={loan.id} className="loan-card-modern">
            <div className="loan-card-header">
              <h3>{loan.projectName}</h3>
              <span className={`rating-badge ${getRatingColor(loan.creditRating)}`}>
                <FaStar /> {loan.creditRating}
              </span>
            </div>

            <div className="loan-card-body">
              <div className="loan-company">
                <strong>{loan.company}</strong>
                <p>ƒê·∫°i di·ªán: {loan.representative}</p>
              </div>

              <div className="loan-stats">
                <div className="stat-item">
                  <BiMoney className="stat-icon" />
                  <div>
                    <span className="stat-label">S·ªë ti·ªÅn c·∫ßn vay</span>
                    <span className="stat-value">{formatCurrency(loan.amount)}</span>
                  </div>
                </div>

                <div className="stat-item">
                  <BiTime className="stat-icon" />
                  <div>
                    <span className="stat-label">Th·ªùi h·∫°n</span>
                    <span className="stat-value">{loan.term} th√°ng</span>
                  </div>
                </div>
              </div>

              <div className="loan-details-row">
                <div className="detail-item">
                  <span>L√£i su·∫•t:</span>
                  <strong className="interest-rate">{loan.interestRate}%/nƒÉm</strong>
                </div>
                <div className="detail-item">
                  <span>ESG Score:</span>
                  <span className={`esg-badge ${getESGColor(loan.esgScore)}`}>
                    <FaLeaf /> {loan.esgScore}/100
                  </span>
                </div>
              </div>

              <div className="loan-purpose">
                <span className="purpose-label">M·ª•c ƒë√≠ch vay:</span>
                <p>{loan.purpose}</p>
              </div>

              <div className="progress-section">
                <div className="progress-header">
                  <span>ƒê√£ huy ƒë·ªông: {loan.funded}%</span>
                  <span>{formatCurrency(loan.amount * loan.funded / 100)}</span>
                </div>
                <div className="progress-bar">
                  <div 
                    className="progress-fill" 
                    style={{ width: `${loan.funded}%` }}
                  ></div>
                </div>
              </div>
            </div>

            <div className="loan-card-footer">
              <button 
                className="btn-view-detail"
                onClick={() => navigate(`/loan-detail/${loan.id}`)}
              >
                Xem chi ti·∫øt
              </button>
              <button 
                className="btn-invest"
                onClick={() => navigate(`/loan-detail/${loan.id}`)}
              >
                ƒê·∫ßu t∆∞ ngay
              </button>
            </div>
          </div>
        ))}
      </div>

      {filteredLoans.length === 0 && (
        <div className="no-results">
          <p>Kh√¥ng t√¨m th·∫•y kho·∫£n vay ph√π h·ª£p v·ªõi b·ªô l·ªçc</p>
        </div>
      )}
    </div>
  );
};

export default LoanList;
