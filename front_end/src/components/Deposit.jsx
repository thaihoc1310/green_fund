import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { FaArrowLeft, FaWallet, FaUniversity, FaCreditCard, FaMobileAlt } from 'react-icons/fa';
import { BiMoney } from 'react-icons/bi';
import BottomNav from './BottomNav';
import './Deposit.css';

const Deposit = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const userRole = location.state?.userRole || 'borrower';
  
  const [depositAmount, setDepositAmount] = useState('');
  const [selectedMethod, setSelectedMethod] = useState('wallet');
  const [bankAccount, setBankAccount] = useState('');
  const [cardNumber, setCardNumber] = useState('');

  const quickAmounts = [100000, 500000, 1000000, 5000000, 10000000, 50000000];

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(amount);
  };

  const handleQuickAmount = (amount) => {
    setDepositAmount(amount.toString());
  };

  const handleDeposit = (e) => {
    e.preventDefault();
    
    if (!depositAmount || depositAmount < 10000) {
      alert('S·ªë ti·ªÅn n·∫°p t·ªëi thi·ªÉu l√† 10,000 VND');
      return;
    }

    // TODO: Implement actual deposit logic
    alert(`ƒê√£ n·∫°p th√†nh c√¥ng ${formatCurrency(depositAmount)} v√†o t√†i kho·∫£n!`);
    navigate('/dashboard', { state: { userRole } });
  };

  return (
    <div className="deposit-container">
      <div className="deposit-header">
        <button className="btn-back" onClick={() => navigate('/dashboard', { state: { userRole } })}>
          <FaArrowLeft /> Quay l·∫°i
        </button>
        <h1>N·∫°p ti·ªÅn v√†o t√†i kho·∫£n</h1>
      </div>

      <div className="deposit-content">
        <div className="deposit-main">
          <div className="deposit-card">
            <div className="card-header">
              <FaWallet className="header-icon" />
              <div>
                <h2>Th√¥ng tin n·∫°p ti·ªÅn</h2>
                <p>N·∫°p ti·ªÅn an to√†n v√† nhanh ch√≥ng</p>
              </div>
            </div>

            <form onSubmit={handleDeposit}>
              <div className="form-section">
                <label>S·ªë ti·ªÅn c·∫ßn n·∫°p *</label>
                <div className="amount-input-group">
                  <BiMoney className="input-icon" />
                  <input
                    type="number"
                    value={depositAmount}
                    onChange={(e) => setDepositAmount(e.target.value)}
                    placeholder="Nh·∫≠p s·ªë ti·ªÅn"
                    min="10000"
                    step="10000"
                    required
                  />
                  <span className="currency-label">VND</span>
                </div>

                <div className="quick-amounts">
                  <span className="quick-label">Ch·ªçn nhanh:</span>
                  {quickAmounts.map((amount) => (
                    <button
                      key={amount}
                      type="button"
                      className={`quick-btn ${depositAmount === amount.toString() ? 'active' : ''}`}
                      onClick={() => handleQuickAmount(amount)}
                    >
                      {formatCurrency(amount)}
                    </button>
                  ))}
                </div>
              </div>

              <div className="form-section">
                <label>Ph∆∞∆°ng th·ª©c n·∫°p ti·ªÅn *</label>
                <div className="payment-methods">
                  <div
                    className={`method-card ${selectedMethod === 'wallet' ? 'active' : ''}`}
                    onClick={() => setSelectedMethod('wallet')}
                  >
                    <input
                      type="radio"
                      name="method"
                      value="wallet"
                      checked={selectedMethod === 'wallet'}
                      onChange={(e) => setSelectedMethod(e.target.value)}
                    />
                    <FaWallet className="method-icon" />
                    <div className="method-info">
                      <span className="method-name">V√≠ ƒëi·ªán t·ª≠</span>
                      <span className="method-desc">Momo, ZaloPay, VNPay</span>
                    </div>
                  </div>

                  <div
                    className={`method-card ${selectedMethod === 'bank' ? 'active' : ''}`}
                    onClick={() => setSelectedMethod('bank')}
                  >
                    <input
                      type="radio"
                      name="method"
                      value="bank"
                      checked={selectedMethod === 'bank'}
                      onChange={(e) => setSelectedMethod(e.target.value)}
                    />
                    <FaUniversity className="method-icon" />
                    <div className="method-info">
                      <span className="method-name">Chuy·ªÉn kho·∫£n</span>
                      <span className="method-desc">Ng√¢n h√†ng n·ªôi ƒë·ªãa</span>
                    </div>
                  </div>

                  <div
                    className={`method-card ${selectedMethod === 'card' ? 'active' : ''}`}
                    onClick={() => setSelectedMethod('card')}
                  >
                    <input
                      type="radio"
                      name="method"
                      value="card"
                      checked={selectedMethod === 'card'}
                      onChange={(e) => setSelectedMethod(e.target.value)}
                    />
                    <FaCreditCard className="method-icon" />
                    <div className="method-info">
                      <span className="method-name">Th·∫ª t√≠n d·ª•ng</span>
                      <span className="method-desc">Visa, Mastercard, JCB</span>
                    </div>
                  </div>

                  <div
                    className={`method-card ${selectedMethod === 'mobile' ? 'active' : ''}`}
                    onClick={() => setSelectedMethod('mobile')}
                  >
                    <input
                      type="radio"
                      name="method"
                      value="mobile"
                      checked={selectedMethod === 'mobile'}
                      onChange={(e) => setSelectedMethod(e.target.value)}
                    />
                    <FaMobileAlt className="method-icon" />
                    <div className="method-info">
                      <span className="method-name">Mobile Banking</span>
                      <span className="method-desc">App ng√¢n h√†ng</span>
                    </div>
                  </div>
                </div>
              </div>

              {selectedMethod === 'bank' && (
                <div className="form-section">
                  <label>S·ªë t√†i kho·∫£n ng√¢n h√†ng</label>
                  <input
                    type="text"
                    value={bankAccount}
                    onChange={(e) => setBankAccount(e.target.value)}
                    placeholder="Nh·∫≠p s·ªë t√†i kho·∫£n"
                    className="form-input"
                  />
                </div>
              )}

              {selectedMethod === 'card' && (
                <div className="form-section">
                  <label>S·ªë th·∫ª t√≠n d·ª•ng</label>
                  <input
                    type="text"
                    value={cardNumber}
                    onChange={(e) => setCardNumber(e.target.value)}
                    placeholder="xxxx xxxx xxxx xxxx"
                    className="form-input"
                    maxLength="19"
                  />
                </div>
              )}

              {depositAmount >= 10000 && (
                <div className="summary-box">
                  <h3>T√≥m t·∫Øt giao d·ªãch</h3>
                  <div className="summary-row">
                    <span>S·ªë ti·ªÅn n·∫°p:</span>
                    <strong>{formatCurrency(depositAmount)}</strong>
                  </div>
                  <div className="summary-row">
                    <span>Ph√≠ giao d·ªãch:</span>
                    <strong className="free">Mi·ªÖn ph√≠</strong>
                  </div>
                  <div className="summary-row total">
                    <span>T·ªïng c·ªông:</span>
                    <strong>{formatCurrency(depositAmount)}</strong>
                  </div>
                </div>
              )}

              <button type="submit" className="btn-deposit">
                X√°c nh·∫≠n n·∫°p ti·ªÅn
              </button>
            </form>
          </div>
        </div>

        <div className="deposit-sidebar">
          <div className="info-card">
            <h3>üí° L∆∞u √Ω quan tr·ªçng</h3>
            <ul>
              <li>S·ªë ti·ªÅn n·∫°p t·ªëi thi·ªÉu: 10,000 VND</li>
              <li>Th·ªùi gian x·ª≠ l√Ω: 1-5 ph√∫t</li>
              <li>Ph√≠ giao d·ªãch: Mi·ªÖn ph√≠ 100%</li>
              <li>H·ªó tr·ª£ 24/7 qua hotline: 1900-xxxx</li>
            </ul>
          </div>

          <div className="info-card">
            <h3>üîí B·∫£o m·∫≠t & An to√†n</h3>
            <ul>
              <li>‚úì M√£ h√≥a SSL 256-bit</li>
              <li>‚úì Tu√¢n th·ªß ti√™u chu·∫©n PCI DSS</li>
              <li>‚úì X√°c th·ª±c 2 l·ªõp</li>
              <li>‚úì B·∫£o v·ªá giao d·ªãch 100%</li>
            </ul>
          </div>

          <div className="info-card promo">
            <h3>üéÅ ∆Øu ƒë√£i ƒë·∫∑c bi·ªát</h3>
            <p>N·∫°p t·ª´ 5,000,000 VND nh·∫≠n th√™m 50,000 VND</p>
            <span className="promo-code">M√£: NAPFIRST</span>
          </div>
        </div>
      </div>
      <BottomNav userRole={userRole} />
    </div>
  );
};

export default Deposit;
